"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const index_js_1 = require("./index.js");
let effect = index_js_1.EffectedTerminalText.newEffect().setForegroundColorByRGB(50, 255, 0);
console.log(effect.parse("RGB(50,255,0) [need terminal support]"));
effect.setBackgroundColorByRGBHex("#00FFFF");
console.log(effect.parse("text: RGB(50,255,0), background: #00ffff "));
console.log(effect.strike().bold().red().parse("add strike bold, change text color to red"));
let effect1 = index_js_1.EffectedTerminalText.newEffect();
effect1
    .red().bufferToPrint("red")
    .backgroundColorBlue().bufferToPrint("bg blue", "text red")
    .reset().yellow().bufferToPrint("yellow")
    .commitPrint()
    .bold().print("bold yellow another line");
effect
    .print("I'm strike bold and red", "me too")
    .blue()
    .printAndReset("I'm blue but still strike and red", " yeah")
    .print("I have no effect");
console.log(index_js_1.EffectedTerminalText.newEffect().foregroundColorBrightGreen().parse("green text"));
console.log("normal");
console.log(index_js_1.EffectedTerminalText.newEffect().setForegroundColorByRGB(255, 255, 0).parse("blinkBold"));
console.log(index_js_1.EffectedTerminalText.newEffect().setForegroundColorByRGBHex("#ffff00").parse("blinkBold"));
console.log(index_js_1.EffectedTerminalText.newEffect().setForegroundColorBy256ColorMode(196).parse("blinkBold"));
console.log(index_js_1.EffectedTerminalText.newEffect().setBackgroundColorByRGB(255, 255, 0).parse("blinkBold"));
console.log(index_js_1.EffectedTerminalText.newEffect().setBackgroundColorByRGBHex("#FFFF00").parse("blinkBold"));
console.log(index_js_1.EffectedTerminalText.newEffect().setBackgroundColorBy256ColorMode(196).parse("blinkBold"));
console.log(index_js_1.EffectedTerminalText.newEffect().strike().bold().blinkSlowly().parse("blink"));
console.log(index_js_1.EffectedTerminalText.newEffect().hide().parse("Good") +
    index_js_1.EffectedTerminalText.newEffect().italic().overlined().parse("morning"));
console.log();
test("hello world", () => { });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXgudGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2luZGV4LnRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx5Q0FBeUQ7QUFFekQsSUFBSSxNQUFNLEdBQUcsK0JBQUcsQ0FBQyxTQUFTLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBRWpFLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyx1Q0FBdUMsQ0FBQyxDQUFDLENBQUM7QUFFbkUsTUFBTSxDQUFDLDBCQUEwQixDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBRTdDLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQywyQ0FBMkMsQ0FBQyxDQUFDLENBQUM7QUFFdkUsT0FBTyxDQUFDLEdBQUcsQ0FDUCxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUMsSUFBSSxFQUFFLENBQUMsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLDJDQUEyQyxDQUFDLENBQ2xGLENBQUM7QUFFRixJQUFJLE9BQU8sR0FBRywrQkFBRyxDQUFDLFNBQVMsRUFBRSxDQUFDO0FBRTlCLE9BQU87S0FDRixHQUFHLEVBQUUsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDO0tBQzFCLG1CQUFtQixFQUFFLENBQUMsYUFBYSxDQUFDLFNBQVMsRUFBRSxVQUFVLENBQUM7S0FDMUQsS0FBSyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQztLQUN4QyxXQUFXLEVBQUU7S0FDYixJQUFJLEVBQUUsQ0FBQyxLQUFLLENBQUMsMEJBQTBCLENBQUMsQ0FBQztBQUU5QyxNQUFNO0tBQ0QsS0FBSyxDQUFDLHlCQUF5QixFQUFFLFFBQVEsQ0FBQztLQUMxQyxJQUFJLEVBQUU7S0FDTixhQUFhLENBQUMsbUNBQW1DLEVBQUUsT0FBTyxDQUFDO0tBQzNELEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0FBRS9CLE9BQU8sQ0FBQyxHQUFHLENBQUMsK0JBQUcsQ0FBQyxTQUFTLEVBQUUsQ0FBQywwQkFBMEIsRUFBRSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO0FBQzlFLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7QUFFdEIsT0FBTyxDQUFDLEdBQUcsQ0FDUCwrQkFBRyxDQUFDLFNBQVMsRUFBRSxDQUFDLHVCQUF1QixDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUMxRSxDQUFDO0FBQ0YsT0FBTyxDQUFDLEdBQUcsQ0FDUCwrQkFBRyxDQUFDLFNBQVMsRUFBRSxDQUFDLDBCQUEwQixDQUFDLFNBQVMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FDM0UsQ0FBQztBQUVGLE9BQU8sQ0FBQyxHQUFHLENBQ1AsK0JBQUcsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxnQ0FBZ0MsQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQzNFLENBQUM7QUFFRixPQUFPLENBQUMsR0FBRyxDQUNQLCtCQUFHLENBQUMsU0FBUyxFQUFFLENBQUMsdUJBQXVCLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQzFFLENBQUM7QUFDRixPQUFPLENBQUMsR0FBRyxDQUNQLCtCQUFHLENBQUMsU0FBUyxFQUFFLENBQUMsMEJBQTBCLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUMzRSxDQUFDO0FBRUYsT0FBTyxDQUFDLEdBQUcsQ0FDUCwrQkFBRyxDQUFDLFNBQVMsRUFBRSxDQUFDLGdDQUFnQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FDM0UsQ0FBQztBQUVGLE9BQU8sQ0FBQyxHQUFHLENBQUMsK0JBQUcsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztBQUMxRSxPQUFPLENBQUMsR0FBRyxDQUNQLCtCQUFHLENBQUMsU0FBUyxFQUFFLENBQUMsSUFBSSxFQUFFLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQztJQUNoQywrQkFBRyxDQUFDLFNBQVMsRUFBRSxDQUFDLE1BQU0sRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FDNUQsQ0FBQztBQUVGLE9BQU8sQ0FBQyxHQUFHLEVBQUUsQ0FBQztBQUNkLElBQUksQ0FBQyxhQUFhLEVBQUUsR0FBRyxFQUFFLEdBQUUsQ0FBQyxDQUFDLENBQUMifQ==